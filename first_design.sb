# %% [markdown]
# Starboard - First Design Sprint

**Dieses Notebook wird direkt von github geladen:**

<https://github.com/Waschi97/DataViz/tree/main/first_design.sb>

Dieses Notebook l채uft direkt im Browser und braucht keine serverseitige Installation.
# %%--- [markdown]
# properties:
#   locked: true
# ---%%
Wir hatten in der ersten Woche ein wenig Zeitprobleme und konnten deswegen noch nicht ernsthaft mit dem Starboard beginnen.

Wir haben allerdings schon die XLS Datein in CSV umgewandelt (zu sehen im GitHub) und 체ber das Preprocessing gesprochen.

F체r dieses steht an:

- [ ] CSV einlesen und in eine sinnvolle Datenstruktur integrieren
- [ ] aus Adressdaten Bezirke ableiten
- [ ] in den Besucherdaten Besucher und Besucherinnen zusammenfassen
- [ ] Adress- und Besucherdaten kombinieren
- [ ] verschiedene Bucket-Sizes f체r die Besucherdaten ausprobieren

\

# %% [javascript]
const url_11_12 = "https://raw.githubusercontent.com/Waschi97/DataViz/main/json_daten/besucherstatistik-2011_2012.json";
const url_13_14 = "https://raw.githubusercontent.com/Waschi97/DataViz/main/json_daten/besucherstatistik-2013_2014.json";
const url_names = "https://raw.githubusercontent.com/Waschi97/DataViz/main/json_daten/kultureinrichtungen_alle.json";
const url_postcodes = "https://raw.githubusercontent.com/Waschi97/DataViz/main/json_daten/BerlinPLZ.json";

var resp = await fetch(url_postcodes);
var zipcodes_json = await resp.json();

resp = await fetch(url_names);
var names_json = await resp.json();

resp = await fetch(url_11_12);
var stats_11_12_json = await resp.json();

resp = await fetch(url_13_14);
var stats_13_14_json = await resp.json();

console.log(stats_13_14_json);